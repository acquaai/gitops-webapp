stages:
  - build
  - publish
  - deploy-dev
  - deploy-prod

build:
  stage: build
  image:
    name: hbr.tcloudsoft.com/develop/golang:1.13.1
  script:
    - go build -o main main.go
  artifacts:
    paths:
      - main
  variables:
    CGO_ENABLED: 0
  tags:
    - k8s-runner

publish:
  stage: publish
  image: hbr.tcloudsoft.com/develop/docker:latest
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build -t ${CI_REGISTRY}/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA -f $CI_PROJECT_DIR/Dockerfile .
    - docker push ${CI_REGISTRY}/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  dependencies:
    - build  
  only:
    - master
  tags:
    - k8s-runner

deploy-dev:
  stage: deploy-dev
  image: hbr.tcloudsoft.com/develop/kustomize:v1.0
  before_script:
    - git remote set-url origin http://${CI_USERNAME}:${CI_PASSWORD}@gitlab.tcloudsoft.com:8080/develop/gitops-webapp.git
    - git config --global user.email ${CI_USER_EMAIL}
    - git config --global user.name ${CI_USERNAME}
  script:
    - git checkout -B master
    - cd deployment/dev
    - kustomize edit set image ${CI_REGISTRY}/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - cat kustomization.yaml
    - git commit -am '[skip ci] DEV image update'
    - git push origin master
  only:
    - master
  tags:
    - k8s-runner

deploy-prod:
  stage: deploy-prod
  image: hbr.tcloudsoft.com/develop/kustomize:v1.0
  before_script:
    - git remote set-url origin http://${CI_USERNAME}:${CI_PASSWORD}@gitlab.tcloudsoft.com:8080/develop/gitops-webapp.git
    - git config --global user.email ${CI_USER_EMAIL}
    - git config --global user.name ${CI_USERNAME}
  script:
    - git checkout -B master
    - git pull origin master
    - cd deployment/prod
    - kustomize edit set image ${CI_REGISTRY}/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - cat kustomization.yaml
    - git commit -am '[skip ci] PROD image update'
    - git push origin master
  only:
    - master
  tags:
    - k8s-runner
  when: manual
